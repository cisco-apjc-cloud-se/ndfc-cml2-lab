---
- name: Build NDFC VXLAN EVPN Lab on CML2 Cluster
  hosts: localhost
  gather_facts: no
  collections:
    - cisco.cml
  vars:
    ### CML2 Cluster Details ###
    cml_host: cml2-n1.mel.ciscolabs.com
    cml_username: admin
    cml_password: C!sco123
    ### POAP Template File ###
    cml_lab_file: cml_lab_file.yml
    startup: all  # Specify 'host' for per host startup
    # wait: no
    ### NDFC Data IPs ###
    ndfc_n1_data_ip: 10.66.209.2
    ndfc_n2_data_ip: 10.66.209.3
    ndfc_n3_data_ip: 10.66.209.4
    ### Per Pod Details ###
    # pod_num: 1
    # oob_mgmt_ip_mask: 10.67.29.35/24
    # oob_mgmt_gw_ip: 10.67.29.1
  ### Per Pod Details ###
  vars_prompt:
    - name: pod_num
      prompt: Enter Pod Number
      private: no
    - name: oob_mgmt_ip_mask
      prompt: Enter OOB Management IP/Mask
      private: no
    - name: oob_mgmt_gw_ip
      prompt: Enter OOB Management Gateway IP
      private: no
    - name: oob_mgmt_gw_mac
      prompt: Enter OOB Management Gateway MAC Address
      private: no
  tasks:
    - name: Create the lab
      cml_lab:
        host: "{{ cml_host }}"
        user: "{{ cml_username }}"
        password: "{{ cml_password }}"
        lab: "Automation Lab Pod {{pod_num}}"
        state: "{{ 'started' if startup == 'all' else 'present' }}"
        # file: "{{ cml_lab_file }}"
        topology: "{{ lookup('template', cml_lab_file) }}"
      register: results

    # - name: Check to see if the Lab is there
    #   cml_lab_facts:
    #     host: "{{ cml_host }}"
    #     user: "{{ cml_username }}"
    #     password: "{{ cml_password }}"
    #     lab: "Automation Lab Pod {{pod_num}}"
    #   register: cml_lab_facts
    #   when: wait | bool

    # - name: Refresh Inventory
    #   meta: refresh_inventory



# - name: Start Individual Nodes
#   hosts: cml_hosts # from dynamic inventory
#   connection: local
#   gather_facts: no
#   collections:
#     - cisco.cml
#   vars:
#     startup: host # 'all'
#   tasks:
#     - block:
#       - block:
#         - name: Check for the cml_config_file
#           stat:
#             path: "{{ cml_config_file }}"
#           register: stat_result
#           delegate_to: localhost
#         - name: Read in cml_config_file
#           set_fact:
#             cml_config_content: "{{ lookup('template', cml_config_file) | default('') }}"
#           when: stat_result.stat.exists
#         when: cml_config_file is defined and cml_config_file
#       - name: Start Leaf/Spine/Border/BGW Nodes
#         cml_node:
#           name: "{{ inventory_hostname }}"
#           host: "{{ cml_host }}"
#           user: "{{ cml_username }}"
#           password: "{{ cml_password }}"
#           config: "#"
#           lab: "Automation Lab Pod #{{pod_num}}"
#           state: started
#         delegate_to: localhost
#       - name: Pause for 30 seconds
#         ansible.builtin.pause:
#           seconds: 30
#       when: startup == 'host' and inventory_hostname is regex("LEAF|SPINE|BGW|BORDER")
#     - block:
#       - block:
#         - name: Check for the cml_config_file
#           stat:
#             path: "{{ cml_config_file }}"
#           register: stat_result
#           delegate_to: localhost
#         - name: Read in cml_config_file
#           set_fact:
#             cml_config_content: "{{ lookup('template', cml_config_file) | default('') }}"
#           when: stat_result.stat.exists
#         when: cml_config_file is defined and cml_config_file
#       - name: Start Other Nodes
#         cml_node:
#           name: "{{ inventory_hostname }}"
#           host: "{{ cml_host }}"
#           user: "{{ cml_username }}"
#           password: "{{ cml_password }}"
#           config: "{{ cml_config_content | default(omit, true) }}"
#           lab: "Automation Lab Pod #{{pod_num}}"
#           state: started
#         delegate_to: localhost
#       - name: Pause for 30 seconds
#         ansible.builtin.pause:
#           seconds: 30
#       when: startup == 'host' and inventory_hostname is not regex("LEAF|SPINE|BGW|BORDER")
